@page
@inject IHttpContextAccessor _accessor;
@model CollectionSystem.WebApp.Pages.UserManagement.Users.IndexModel
@{
    ViewData["Title"] = "User Management";
    var i = 1;
}


<!--  BEGIN CONTENT AREA  -->
<div class="layout-px-spacing">

    <div class="middle-content container-xxl p-0">

        <!-- BREADCRUMB -->
        <div class="page-meta pb-2">
            <nav class="breadcrumb-style-one" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a aria-expanded="false" class="dropdown-toggle" href="~/Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
                </ol>
            </nav>
        </div>
        <!-- /BREADCRUMB -->
        <div class="row">
            <div class="col-md-9">
            </div>
        </div>


        <!-- CONTENT AREA -->
        <div class="row">
            <div class="col-xl-12 col-lg-12 col-sm-12  layout-spacing">
                <div class="statbox widget box box-shadow">
                    <div class="widget-content widget-content-area">
                        <table id="individual-col-search" class="table dt-table-hover">
                            <thead>
                                <tr>
                                    <th>S/N</th>
                                    <th>Name</th>
                                    <th>User Name</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Status</th>
                                    <th class="no content"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.users != null)
                                {
                                    @foreach (var item in Model.users)
                                    {
                                        <tr>
                                            <td>@i</td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.FirstName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.UserName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Email)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Role)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Status)
                                            </td>
                                            <td class="text-center">
                                                <div class="action-btns">
                                                    <a href="~/UserManagement/Users/Details?Id=@item.Id" class="action-btn btn-view bs-tooltip me-2" data-toggle="tooltip" data-placement="top" title="View">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-eye"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
                                                    </a>
                                                    <a href="~/UserManagement/Users/Edit?Id=@item.Id" class="action-btn btn-edit bs-tooltip me-2" data-toggle="tooltip" data-placement="top" title="Edit">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-2"><path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path></svg>
                                                    </a>
                                                    @if (_accessor.HttpContext.Session.GetString("role") == Enums.Roles.SuperAdmin.ToString())
                                                    {
                                                        <a href="~/UserManagement/Users/Delete?Id=@item.Id" class="action-btn btn-delete bs-tooltip" data-toggle="tooltip" data-placement="top" title="Delete">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>
                                                        </a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                        i++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
        <!-- CONTENT AREA -->
    </div>

</div>
<!--  END CONTENT AREA  -->
@section Scripts
    {
    @if (TempData["ErrorMessage"] != null)
    {
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'error',
                title: '@TempData["ErrorMessage"]'
            })
        </script>
        TempData.Clear();
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'success',
                title: '@TempData["SuccessMessage"]'
            })
        </script>
        TempData.Clear();
    }
}
