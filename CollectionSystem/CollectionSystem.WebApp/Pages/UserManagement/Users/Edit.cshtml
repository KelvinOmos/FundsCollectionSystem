@page
@model CollectionSystem.WebApp.Pages.UserManagement.Users.EditModel
@{
    ViewData["Title"] = "Edit";
}

<div class="container">
    <div class="container">

        <!-- BREADCRUMB -->
        <div class="page-meta">
            <nav class="breadcrumb-style-one" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a aria-expanded="false" class="dropdown-toggle" href="~/Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item"><a aria-expanded="false" class="dropdown-toggle" href="~/UserManagement/Users/Index">User Management</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Edit</li>
                </ol>
            </nav>
        </div>
        <!-- /BREADCRUMB -->

        <div id="navSection" data-bs-spy="affix" class="nav  sidenav">
            <div class="sidenav-content">
            </div>
        </div>

        <div class="row">
            <div id="flHorizontalForm" class="col-sm-8 layout-spacing">
                <div class="statbox widget box box-shadow">
                    <div class="widget-header">
                        <div class="row">
                            <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                <h4>Edit User</h4>
                            </div>
                        </div>
                    </div>

                    <div class="widget-content widget-content-area py-1 p-3">
                        <form asp-action="Edit" class="row g-3">
                            <div asp-validation-for-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="user.Id" />
                            <input type="hidden" asp-for="user.FirstName" />
                            <input type="hidden" asp-for="user.Email" />
                            <div class="col-md-6">
                                <label for="Name" class="form-label">Name</label>
                                <span for="Name" class="card text-center p-2">@Model.user.FirstName</span>
                                <span asp-validation-for="user.FirstName" class="text-danger"></span>
                            </div>
                           
                            <div class="col-md-6">
                                <label for="Email" class="form-label">Email </label>
                                <span for="Email" class="card text-center p-2">@Model.user.Email</span>
                                <span asp-validation-for="user.Email" class="text-danger"></span>
                            </div>      
                            
                            <div class="col-md-6">
                                <label for="Status" class="form-label text-center">Status</label>
                                <select id="Status" class="form-control form-control-sm" asp-for="user.Status" required>
                                    <option class=" text-center" value="0">INACTIVE</option>
                                    <option class=" text-center" value="1">ACTIVE</option>
                                </select>
                                <span asp-validation-for="user.Status" class="text-danger"></span>
                            </div>

                            <div class="col-md-2">
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>

                            <div class="col-md-4">
                                <a class="btn btn-primary" href="~/UserManagement/Users/Index">Back to list</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
    {
    <script>
        var isChecked = document.getElementById("IsExecutable");
        var execPathDiv = document.getElementById("execPath");
        if (isChecked) {
            execPathDiv.style.display = isChecked.checked ? "block" : "none";
        }

        function ShowHideDiv(isExec) {
            execPathDiv.style.display = isExec.checked ? "block" : "none";
        }

    </script>
    @if (TempData["ErrorMessage"] != null)
    {
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'error',
                title: '@TempData["ErrorMessage"]'
            })
        </script>
        TempData.Clear();
    }
}